{"version":3,"sources":["Flip.js","App.js","reportWebVitals.js","index.js"],"names":["Flip","props","_tickRef","React","createRef","this","_tickInstance","Tick","DOM","create","current","value","destroy","ref","className","data-repeat","aria-hidden","data-view","Component","App","useState","count","setCount","useEffect","fetchData","a","fetch","result","text","interval","setInterval","clearInterval","style","position","left","top","transform","margin","username","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qSAKqBA,E,kDACnB,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,SAAWC,IAAMC,YAFL,E,qDAKnB,WACEC,KAAKC,cAAgBC,IAAKC,IAAIC,OAAOJ,KAAKH,SAASQ,QAAS,CAC1DC,MAAON,KAAKJ,MAAMU,U,gCAItB,WACON,KAAKC,gBACVD,KAAKC,cAAcK,MAAQN,KAAKJ,MAAMU,S,kCAGxC,WACON,KAAKC,eACVC,IAAKC,IAAII,QAAQP,KAAKH,SAASQ,W,oBAGjC,WACE,OACE,qBAAKG,IAAKR,KAAKH,SAAUY,UAAU,OAAnC,SACE,qBAAKC,cAAY,OAAOC,cAAY,OAApC,SACE,sBAAMC,YAAU,OAAhB,0B,GA1BwBd,IAAMe,W,QCqCzBC,MAnCf,WAAgB,IAAD,EACaC,mBAAS,QADtB,mBACNC,EADM,KACCC,EADD,KAcb,OAXAC,qBAAU,WACR,IAAMC,EAAS,uCAAG,8BAAAC,EAAA,sEACKC,MAAM,2CADX,cACVC,EADU,gBAEIA,EAAOC,OAFX,OAEVP,EAFU,OAGhBC,EAASD,GAHO,2CAAH,qDAKfG,IACA,IAAMK,EAAWC,YAAYN,EAAW,KACxC,OAAO,kBAAMO,cAAcF,MAC1B,IAGD,sBAAKf,UAAU,MAAf,UACE,0DACA,qBAAKkB,MAAO,CACVC,SAAU,WAAYC,KAAM,MAAOC,IAAK,MACxCC,UAAW,yBAFb,SAIE,qBAAKJ,MAAO,CAAEK,OAAQ,OAAtB,SACE,cAAC,EAAD,CAAM1B,MAAOU,QAGjB,qBAAKW,MAAO,CACRC,SAAU,WAAYC,KAAM,MAAOC,IAAK,MACxCC,UAAW,yBAFf,SAIE,cAAC,IAAD,CAAQE,SAAS,mBCxBVC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.b06af44a.chunk.js","sourcesContent":["import React from \"react\";\n\nimport Tick from \"@pqina/flip\";\nimport \"@pqina/flip/dist/flip.min.css\";\n\nexport default class Flip extends React.Component {\n  constructor(props) {\n    super(props);\n    this._tickRef = React.createRef();\n  }\n\n  componentDidMount() {\n    this._tickInstance = Tick.DOM.create(this._tickRef.current, {\n      value: this.props.value\n    });\n  }\n\n  componentDidUpdate() {\n    if (!this._tickInstance) return;\n    this._tickInstance.value = this.props.value;\n  }\n\n  componentWillUnmount() {\n    if (!this._tickInstance) return;\n    Tick.DOM.destroy(this._tickRef.current);\n  }\n\n  render() {\n    return (\n      <div ref={this._tickRef} className=\"tick\">\n        <div data-repeat=\"true\" aria-hidden=\"true\">\n          <span data-view=\"flip\">Tick</span>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { useEffect, useState } from \"react\";\nimport './App.css';\n\nimport Flip from './Flip';\nimport { Follow } from 'react-twitter-widgets'\n\n\nfunction App() {\n  const [count, setCount] = useState(709998);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await fetch('https://blockchain.info/q/getblockcount');\n      const count = await result.text();\n      setCount(count);\n    }\n    fetchData();\n    const interval = setInterval(fetchData, 10000);\n    return () => clearInterval(interval);\n  }, []);  \n\n  return (\n    <div className=\"App\">\n      <h1>Block Height of Bitcoin:</h1>\n      <div style={{\n        position: 'absolute', left: '50%', top: '40%',\n        transform: 'translate(-50%, -50%)'\n      }}>\n        <div style={{ margin: \"1em\" }}>\n          <Flip value={count} />\n        </div>\n      </div>\n      <div style={{\n          position: 'absolute', left: '50%', top: '90%',\n          transform: 'translate(-50%, -50%)'\n        }}>\n        <Follow username=\"AdamShao\" />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}